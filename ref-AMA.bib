%% This BibTeX bibliography file was created using BibDesk.
%% https://bibdesk.sourceforge.io/

%% Created for Baoluo Meng at 2021-12-27 14:39:12 -0600 


%% Saved with string encoding Unicode (UTF-8) 



@url{gnumergesort,
	author = {GNU implementation of mergesort used in qsort},
	date-added = {2021-12-27 14:19:06 -0600},
	date-modified = {2021-12-27 14:39:12 -0600},
	lastchecked = {12/27/2021},
	title = {https://code.woboq.org/userspace/glibc/stdlib/msort.c.html},
	urldate = {12/27/2021}}

@article{KIM2009454,
	abstract = {Bentley and Sedgewick proposed multikey Quicksort with `split-end' partitioning for sorting strings. But it can be slow in case of many equal elements because it adopted `split-end' partitioning that moves equal elements to the ends and swaps back to the middle. We present `collect-center' partitioning to improve multikey Quicksort in that case. It moves equal elements to the middle directly like the `Dutch National Flag Problem' partitioning approach and it uses two inner loops like Bentley and McIlroy's. In case of many equal elements such as DNA sequences, HTML files, and English texts, multikey Quicksort with `collect-center' partitioning is faster than multikey Quicksort with `split-end' partitioning.},
	author = {Eunsang Kim and Kunsoo Park},
	date-added = {2021-12-27 11:18:08 -0600},
	date-modified = {2021-12-27 11:18:08 -0600},
	doi = {https://doi.org/10.1016/j.ipl.2009.01.007},
	issn = {0020-0190},
	journal = {Information Processing Letters},
	keywords = {Algorithms, String sorting, Multikey Quicksort, Ternary partitioning},
	number = {9},
	pages = {454-459},
	title = {Improving multikey Quicksort for sorting strings with many equal elements},
	url = {https://www.sciencedirect.com/science/article/pii/S002001900900012X},
	volume = {109},
	year = {2009},
	bdsk-url-1 = {https://www.sciencedirect.com/science/article/pii/S002001900900012X},
	bdsk-url-2 = {https://doi.org/10.1016/j.ipl.2009.01.007}}

@article{knuth97,
	author = {Knuth, Donald E.},
	journal = {The Art of Computer Programming.},
	number = {11},
	pages = {83-95},
	publisher = {Addison-Wesley},
	title = {Shell's method},
	volume = {3},
	year = {1997}}

@inproceedings{mcilroy1993optimistic,
	author = {McIlroy, Peter},
	booktitle = {Proceedings of the fourth annual ACM-SIAM symposium on discrete algorithms},
	pages = {467--474},
	title = {Optimistic sorting and information theoretic complexity},
	year = {1993}}

@article{williams1964algorithm,
	author = {Williams, John William Joseph},
	journal = {Commun. ACM},
	pages = {347--348},
	title = {Algorithm 232: heapsort},
	volume = {7},
	year = {1964}}

@article{hoare1961algorithm,
	author = {Hoare, Charles Antony Richard},
	journal = {Communications of the ACM},
	number = {7},
	pages = {321},
	publisher = {ACM New York, NY, USA},
	title = {Algorithm 64: quicksort},
	volume = {4},
	year = {1961}}

@misc{timsort,
	author = {Peters, T.},
	howpublished = {\url{https://svn.python.org/projects/python/trunk/Objects/listsort.txt}},
	note = {Accessed: 2021-03-11},
	title = {TimSort - Python}}

@article{la2014neatsort,
	author = {La Rocca, Marcello and Cantone, Domenico},
	journal = {arXiv preprint arXiv:1407.6183},
	title = {NeatSort-A practical adaptive algorithm},
	year = {2014}}

@article{bentley1993engineering,
	author = {Bentley, Jon L and McIlroy, M Douglas},
	journal = {Software: Practice and Experience},
	number = {11},
	pages = {1249--1265},
	publisher = {Wiley Online Library},
	title = {Engineering a sort function},
	volume = {23},
	year = {1993}}

@article{sedgewick1978implementing,
	author = {Sedgewick, Robert},
	journal = {Communications of the ACM},
	number = {10},
	pages = {847--857},
	publisher = {ACM New York, NY, USA},
	title = {Implementing quicksort programs},
	volume = {21},
	year = {1978}}

@article{cook1980best,
	author = {Cook, Curtis R and Kim, Do Jin},
	journal = {Communications of the ACM},
	number = {11},
	pages = {620--624},
	publisher = {ACM New York, NY, USA},
	title = {Best sorting algorithm for nearly sorted lists},
	volume = {23},
	year = {1980}}

@article{moffat1996splaysort,
	author = {Moffat, Alistair and Eddy, Gary and Petersson, Ola},
	journal = {Software: Practice and Experience},
	number = {7},
	pages = {781--797},
	publisher = {Wiley Online Library},
	title = {Splaysort: Fast, versatile, practical},
	volume = {26},
	year = {1996}}

@incollection{dijkstra1982smoothsort,
	author = {Dijkstra, Edsger W},
	booktitle = {Theoretical Foundations of Programming Methodology},
	pages = {3--17},
	publisher = {Springer},
	title = {Smoothsort, an alternative for sorting in situ},
	year = {1982}}

@book{10.5555/1614191,
	abstract = {If you had to buy just one text on algorithms, Introduction to Algorithms is a magnificent choice. The book begins by considering the mathematical foundations of the analysis of algorithms and maintains this mathematical rigor throughout the work. The tools developed in these opening sections are then applied to sorting, data structures, graphs, and a variety of selected algorithms including computational geometry, string algorithms, parallel models of computation, fast Fourier transforms (FFTs), and more. This book's strength lies in its encyclopedic range, clear exposition, and powerful analysis. Pseudo-code explanation of the algorithms coupled with proof of their accuracy makes this book is a great resource on the basic tools used to analyze the performance of algorithms.},
	author = {Cormen, Thomas H. and Leiserson, Charles E. and Rivest, Ronald L. and Stein, Clifford},
	edition = {3rd},
	isbn = {0262033844},
	publisher = {The MIT Press},
	title = {Introduction to Algorithms, Third Edition},
	year = {2009}}

@article{wegener1993bottom,
	author = {Wegener, Ingo},
	journal = {Theoretical Computer Science},
	number = {1},
	pages = {81--98},
	publisher = {Elsevier},
	title = {BOTTOM-UP-HEAPSORT, a new variant of HEAPSORT beating, on an average, QUICKSORT (if n is not very small)},
	volume = {118},
	year = {1993}}

@article{sarwar1996engineering,
	author = {Sarwar, S Mansoor and Sarwar, Syed Aqeel and Jaragh, Mansour HA and Brandeburg, Jesse},
	journal = {Computer languages},
	number = {1},
	pages = {39--47},
	publisher = {Elsevier},
	title = {Engineering quicksort},
	volume = {22},
	year = {1996}}
